class PG:
    def __init__(self, *args):
        self.args = args
        self.symmetries = set(args)

    def __repr__(self):
        return ', '.join((str(arg) for arg in self.symmetries))


class T:
    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return str(self.args)

    def __str__(self):
        return str(self.args)

    def __hash__(self):
        return hash(self.args)


t_c_000 = T('c_000')

t_m_100, t_m_010, t_m_001 = T('m_100'), T('m_010'), T('m_001')
t_m_110, t_m_011, t_m_101 = T('m_110'), T('m_011'), T('m_101')
t_m_m101, t_m_m110, t_m_0m11 = T('m_m101'), T('m_m110'), T('m_0m11')

t_2_100, t_2_010, t_2_001 = T('2_100'), T('2_010'), T('2_001')
t_2_110, t_2_101, t_2_011 = T('2_110'), T('2_101'), T('2_011')
t_2_m110, t_2_m101, t_2_0m11 = T('2_m110'), T('2_m101'), T('2_0m11')

t_3_111, t_3_m111, t_3_1m11, t_3_11m1 = T('3_111'), T('3_m111'), T('3_1m11'), T('3_11m1')
t_m3_111, t_m3_m111, t_m3_1m11, t_m3_11m1 = T('m3_111'), T('m3_m111'), T('m3_1m11'), T('m3_11m1')

t_4_100, t_4_010, t_4_001 = T('4_100'), T('4_010'), T('4_001')
t_m4_100, t_m4_010, t_m4_001 = T('m4_100'), T('m4_010'), T('m4_001')


pg_2_div_m_100 = PG(t_2_100, t_m_100, t_c_000)
print(pg_2_div_m_100)

a = ['c_000',

     'm_100', 'm_010', 'm_001',
     'm_110', 'm_011', 'm_101',
     'm_m101', 'm_m110', 'm_0m11',

     '2_100', '2_010', '2_001',
     '2_110', '2_101', '2_011',
     '2_m110', '2_m101', '2_0m11',

    T('3_111'), T('3_m111'), T('3_1m11'), T('3_11m1'),

    T('m3_111'), T('m3_m111'), T('m3_1m11'), T('m3_11m1'),

    T('4_100'), T('4_010'), T('4_001'),

    T('m4_100'), T('m4_010'), T('m4_001'),
      ]


b = [
    t_c_000,

    t_m_100, t_m_010, t_m_001,
    t_m_110, t_m_011, t_m_101,
    t_m_m101, t_m_m110, t_m_0m11,

    t_2_100, t_2_010, t_2_001,
    t_2_110, t_2_101, t_2_011,
    t_2_m110, t_2_m101, t_2_0m11,

    t_3_111, t_3_m111, t_3_1m11, t_3_11m1,
    t_m3_111, t_m3_m111, t_m3_1m11, t_m3_11m1,

    t_4_100, t_4_010, t_4_001,
    t_m4_100, t_m4_010, t_m4_001]