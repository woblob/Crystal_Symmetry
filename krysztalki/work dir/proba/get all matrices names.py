import re
lst = []
with open("../matrices_new_extended.py") as file:
    for line in file:
        found = re.findall("_matrix_.+\s=", line)
        if found:
            name = found[0].strip(" = ")
            lst.append(name)

print(sorted(lst))


# names_of_matrices = {
#     '2_00z': 0,
#     '2_0myy': 1,
#     '2_0qmyy_0mqq': 2,
#     '2_0qyy_0qq': 3,
#     '2_0qz': 4,
#     '2_0y0': 5,
#     '2_0yy': 6,
#     '2_1_0qmyy_0qmq': 7,
#     '2_1_0qyy_0qq': 8,
#     '2_1_0qz_00h': 9,
#     '2_1_0yq_0h0': 10,
#     '2_1_3ohmyy_0mqq': 11,
#     '2_1_3ohmyy_0qmq': 12,
#     '2_1_3omqyy_0hh': 13,
#     '2_1_3oqyy_0hh': 14,
#     '2_1_hmx3ox_mq0q': 15,
#     '2_1_hmx3ox_q0mq': 16,
#     '2_1_mqx0x_q0q': 17,
#     '2_1_mqx3ox_h0h': 18,
#     '2_1_mqxox_h0h': 19,
#     '2_1_oqyy_0hh': 20,
#     '2_1_oyy_03q3q': 21,
#     '2_1_oyy_0qq': 22,
#     '2_1_q0z_00h': 23,
#     '2_1_qmx0x_mq0q': 24,
#     '2_1_qmx0x_q0mq': 25,
#     '2_1_qqz_00h': 26,
#     '2_1_qx0x_q0mq': 27,
#     '2_1_qx3ox_h0h': 28,
#     '2_1_qy0_0h0': 29,
#     '2_1_qyq_0h0': 30,
#     '2_1_qyy_0hh': 31,
#     '2_1_x0q_h00': 32,
#     '2_1_xhmx3o_mqq0': 33,
#     '2_1_xhmx3o_qmq0': 34,
#     '2_1_xmqx0_qq0': 35,
#     '2_1_xmqx3o_hh0': 36,
#     '2_1_xmqxo_hh0': 37,
#     '2_1_xox_3q03q': 38,
#     '2_1_xox_q0q': 39,
#     '2_1_xq0_h00': 40,
#     '2_1_xqmx0_mqq0': 41,
#     '2_1_xqmx0_qmq0': 42,
#     '2_1_xqq_h00': 43,
#     '2_1_xqx0_qq0': 44,
#     '2_1_xqx3o_hh0': 45,
#     '2_1_xqx_q0q': 46,
#     '2_1_xxo_3q3qo': 47,
#     '2_1_xxo_qq0': 48,
#     '2_1_xxq_hh0': 49,
#     '2_3o3qmyy': 50,
#     '2_3qmx3ox': 51,
#     '2_3qmx3ox_dwa': 52,
#     '2_hmxqx': 53,
#     '2_mx0x': 54,
#     '2_mxqx': 55,
#     '2_o3qmyy': 56,
#     '2_oqmyy': 57,
#     '2_qhmyy': 58,
#     '2_qmxox': 59,
#     '2_qmyy': 60,
#     '2_qqz': 61,
#     '2_qy0': 62,
#     '2_qyq': 63,
#     '2_qyy': 64,
#     '2_x00': 65,
#     '2_x0q': 66,
#     '2_x0x': 67,
#     '2_x3qmx3o': 68,
#     '2_x3qmxo': 69,
#     '2_xhmxq': 70,
#     '2_xmx0': 71,
#     '2_xmxq': 72,
#     '2_xqmxo': 73,
#     '2_xqq': 74,
#     '2_xqx': 75,
#     '2_xx0': 76,
#     '2_xxq': 77,
#     '3_1_HxmHxx_ttt': 78,
#     '3_1_Hxtxx_ttt': 79,
#     '3_1_mtmHxx_ttt': 80,
#     '3_2_2txmtmxmx_mHHH': 81,
#     '3_2_HmxHxmx_tmtt': 82,
#     '3_2_Hmxtmxx_ttmt': 83,
#     '3_2_HxHmxmx_mHHH': 84,
#     '3_2_mHmxtxmx_HmHH': 85,
#     '3_2_tmx2tmxx_HHmH': 86,
#     '3_2_tmxHmxx_HHmH': 87,
#     '3_2_tmxtxmx_HmHH': 88,
#     '3_2_txmHmxmx_mttt': 89,
#     '3_hmxhmxx_dwa': 90,
#     '3_hmxhmxx_jeden': 91,
#     '3_hmxxmx': 92,
#     '3_hxmhmxmx': 93,
#     '3_hxmxmx': 94,
#     '3_mxhmxx': 95,
#     '3_mxhxmx': 96,
#     '3_mxmxx': 97,
#     '3_mxxmx': 98,
#     '3_xmxmx': 99,
#     '3_xxx': 100,
#     '3_xxx_hhh': 101,
#     '4_00z': 102,
#     '4_0y0': 103,
#     '4_1_03qz_00q': 104,
#     '4_1_0qz_00q': 105,
#     '4_1_3qy0_0q0': 106,
#     '4_1_hymq_0q0': 107,
#     '4_1_mqhz_00q': 108,
#     '4_1_qy0_0q0': 109,
#     '4_1_x03q_q00': 110,
#     '4_1_x0q_q00': 111,
#     '4_1_xmqh_q00': 112,
#     '4_2_00z_00h': 113,
#     '4_2_0hz_00h': 114,
#     '4_2_0y0_0h0': 115,
#     '4_2_x00_h00': 116,
#     '4_2_x0h_h00': 117,
#     '4_3_hymq_03q0': 118,
#     '4_3_hyq_03q0': 119,
#     '4_3_mqhz_003q': 120,
#     '4_3_qhz_003q': 121,
#     '4_3_xmqh_3q00': 122,
#     '4_3_xqh_3q00': 123,
#     '4_mqqz': 124,
#     '4_qqz': 125,
#     '4_qy0_0h0': 126,
#     '4_qymq': 127,
#     '4_qyq': 128,
#     '4_x00': 129,
#     '4_xmqq': 130,
#     '4_xqq': 131,
#     'a_x0z_h00': 132,
#     'a_xhymy_h00': 133,
#     'a_xqz_h00': 134,
#     'a_xymy_h00': 135,
#     'a_xyq_h00': 136,
#     'a_xyy_h00': 137,
#     'b_hxymx_0h0': 138,
#     'b_qyz_0h0': 139,
#     'b_xy0_0h0': 140,
#     'b_xymx_0h0': 141,
#     'b_xyq_0h0': 142,
#     'b_xyx_0h0': 143,
#     'c_0yz_00h': 144,
#     'c_hxmxz_00h': 145,
#     'c_xmxz_00h': 146,
#     'c_xqz_00h': 147,
#     'c_xxz_00h': 148,
#     'd_3oyz_03q3q': 149,
#     'd_3oyz_03qq': 150,
#     'd_3oyz_0q3q': 151,
#     'd_3oyz_0qq': 152,
#     'd_hxmxz_mqq3q': 153,
#     'd_hxmxz_qmqq': 154,
#     'd_hxymx_mqqq': 155,
#     'd_hxymx_q3qmq': 156,
#     'd_oyz_03q3q': 157,
#     'd_oyz_03qq': 158,
#     'd_oyz_0q3q': 159,
#     'd_oyz_0qq': 160,
#     'd_x3oz_3q03q': 161,
#     'd_x3oz_3q0q': 162,
#     'd_x3oz_q03q': 163,
#     'd_x3oz_q0q': 164,
#     'd_xhymy_3qmqq': 165,
#     'd_xhymy_qqmq': 166,
#     'd_xoz_3q03q': 167,
#     'd_xoz_3q0q': 168,
#     'd_xoz_q03q': 169,
#     'd_xoz_q0q': 170,
#     'd_xxz_3q3q3q': 171,
#     'd_xxz_qqq': 172,
#     'd_xy3o_3q3q0': 173,
#     'd_xy3o_q3q0': 174,
#     'd_xy3o_qq0': 175,
#     'd_xyo_3q3q0': 176,
#     'd_xyo_3qq0': 177,
#     'd_xyo_q3q0': 178,
#     'd_xyo_qq0': 179,
#     'd_xyx_3q3q3q': 180,
#     'd_xyx_qqq': 181,
#     'd_xyy_3q3q3q': 182,
#     'd_xyy_qqq': 183,
#     'dxy3o_3qq0': 184,
#     'i_000': 185,
#     'inv_000': 186,
#     'inv_0qq': 187,
#     'inv_3o3o3o': 188,
#     'inv_3o3oo': 189,
#     'inv_3oo3o': 190,
#     'inv_3ooo': 191,
#     'inv_o3o3o': 192,
#     'inv_o3oo': 193,
#     'inv_oo3o': 194,
#     'inv_ooo': 195,
#     'inv_q0q': 196,
#     'inv_qq0': 197,
#     'inv_qqq': 198,
#     'm3_1mxhmxx_5oo3o': 199,
#     'm3_1mxhmxx_h0h': 200,
#     'm3_1mxmxx_5om3o3o': 201,
#     'm3_hmxhxmx_00h': 202,
#     'm3_hmxmhmxx_5om3omo': 203,
#     'm3_hmxmhmxx_hmh0': 204,
#     'm3_hmxmxx_h00': 205,
#     'm3_hmxmxx_om3o3o': 206,
#     'm3_hxhmxmx_3o5oo': 207,
#     'm3_hxhmxmx_hh0': 208,
#     'm3_hxhxx_3o3omo': 209,
#     'm3_m1mx1xmx_m3o3o5o': 210,
#     'm3_m1mxhxmx_m3omo5o': 211,
#     'm3_m1mxhxmx_mh0h': 212,
#     'm3_mhmx1xmx_0hh': 213,
#     'm3_mhmx1xmx_o3o5o': 214,
#     'm3_mhmxhxmx_m3o3oo': 215,
#     'm3_mhmxxmx_mqmqq': 216,
#     'm3_mhx1mxmx_0hmh': 217,
#     'm3_mhx1mxmx_mo5om3o': 218,
#     'm3_mhxhmxmx_mqqmq': 219,
#     'm3_mhxmhxx_00h': 220,
#     'm3_mhxxx_h00': 221,
#     'm3_mhxxx_mo3o3o': 222,
#     'm3_mxmhmxx_qmqmq': 223,
#     'm3_mxmxx': 224,
#     'm3_mxmxx_3qmqq': 225,
#     'm3_mxxmx': 226,
#     'm3_mxxmx_mqq3q': 227,
#     'm3_x1mxmx_3o5om3o': 228,
#     'm3_xhmxmx_0h0': 229,
#     'm3_xhmxmx_3oom3o': 230,
#     'm3_xhxx_0h0': 231,
#     'm3_xmhxx_3omo3o': 232,
#     'm3_xmxmx': 233,
#     'm3_xmxmx_q3qmq': 234,
#     'm3_xxx': 235,
#     'm3_xxx_3o3o3o': 236,
#     'm3_xxx_qqq': 237,
#     'm4_00z': 238,
#     'm4_00z_00q': 239,
#     'm4_0y0': 240,
#     'm4_0y0_0q0': 241,
#     'm4_0yh_0qh': 242,
#     'm4_h0z_h0q': 243,
#     'm4_hmqz_hmq3o': 244,
#     'm4_hqz_hqo': 245,
#     'm4_mqyh_mq3oh': 246,
#     'm4_mqyq_mq0q': 247,
#     'm4_qmqz_qmq0': 248,
#     'm4_qqz_qq0': 249,
#     'm4_qyh_qoh': 250,
#     'm4_qyq_q0q': 251,
#     'm4_x00': 252,
#     'm4_x00_q00': 253,
#     'm4_xh0_qh0': 254,
#     'm4_xhmq_3ohmq': 255,
#     'm4_xhq_ohq': 256,
#     'm4_xqmq_0qmq': 257,
#     'm4_xqq_0qq': 258,
#     'm_0yz': 259,
#     'm_x0z': 260,
#     'm_xmxz': 261,
#     'm_xxz': 262,
#     'm_xy0': 263,
#     'm_xymx': 264,
#     'm_xymy': 265,
#     'm_xyx': 266,
#     'm_xyy': 267,
#     'n_0yz_0hh': 268,
#     'n_mqxxz_qq0': 269,
#     'n_mqxyx_q0q': 270,
#     'n_qxmxz_mqq0': 271,
#     'n_qxmxz_qmq0': 272,
#     'n_qxxz_qq0': 273,
#     'n_qxymx_mq0q': 274,
#     'n_qxymx_q0mq': 275,
#     'n_qxymx_q0q': 276,
#     'n_qyz_00h': 277,
#     'n_qyz_0hh': 278,
#     'n_x0z_h0h': 279,
#     'n_xmqyy_0qq': 280,
#     'n_xqymy_0mqq': 281,
#     'n_xqymy_0qmq': 282,
#     'n_xqyy_0qq': 283,
#     'n_xqz_h0h': 284,
#     'n_xxz_hhh': 285,
#     'n_xy0_hh0': 286,
#     'n_xyq_hh0': 287,
#     'n_xyx_hhh': 288,
#     'n_xyy_hhh': 289,
#     'hex_2_0y0': 290,
#     'hex_2_0yH': 291,
#     'hex_2_0yq': 292,
#     'hex_2_0yt': 293,
#     'hex_2_2xx0': 294,
#     'hex_2_2xxq': 295,
#     'hex_2_2xxv': 296,
#     'hex_2_x00': 297,
#     'hex_2_x0H': 298,
#     'hex_2_x0q': 299,
#     'hex_2_x0t': 300,
#     'hex_2_x2x0': 301,
#     'hex_2_x2xH': 302,
#     'hex_2_x2xq': 303,
#     'hex_2_x2xt': 304,
#     'hex_2_xmx5v': 305,
#     'hex_2_xmxH': 306,
#     'hex_2_xmxt': 307,
#     'hex_2_xxH': 308,
#     'hex_3_00z': 309,
#     'hex_3_1_00z_00t': 310,
#     'hex_3_2_00z_002t': 311,
#     'hex_6_00z': 312,
#     'hex_6_1_00z_00H': 313,
#     'hex_6_2_00z_00t': 314,
#     'hex_6_3_00z_00h': 315,
#     'hex_6_4_00z_002t': 316,
#     'hex_6_5_00z_005H': 317,
#     'hex_c_0yz_00h': 318,
#     'hex_c_2xxz_00h': 319,
#     'hex_c_x0z_00h': 320,
#     'hex_c_x2xz_00h': 321,
#     'hex_m3_00z': 322,
#     'hex_m6_00z': 323,
#     'hex_m_0yz': 324,
#     'hex_m_2xxz': 325,
#     'hex_m_x0z': 326,
#     'hex_m_x2xz': 327
# }
#
#
# # names_of_matrices = {name: index for index, name in enumerate(a)}
# # from proba.names_of_matrices_numerated import names_of_matrices as NM
# NM = names_of_matrices
#
# NM['2_1_0y0_0h0'] = 328
#
# # All Space Groups: P
# # Triclinic
# Space_group_Pinv = NM["inv_000"]
#
# # Monoclinic
# Space_group_P121 = NM['2_0y0']
# Space_group_P2_1 = NM['2_1_0y0_0h0']
# Space_group_Pm = NM['m_x0z']
# Space_group_P2divm = Space_group_Pm + Space_group_P121 + Space_group_Pinv
# # Space_group_P = NM[]
# # Space_group_P = NM[]
# # Space_group_P = NM[]
# # Space_group_P = NM[]
# # Space_group_P = NM[]
# # Space_group_P121 = set([names_of_matrices["_"]])
# # print(Space_group_P1)