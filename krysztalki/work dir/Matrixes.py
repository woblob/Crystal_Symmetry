import numpy as np

def generateSymetryBaseQUAD():
    return {
        "c":{
            "000":np.array([[-1,0,0],[0,-1,0],[0,0,-1]])
        },
        "m":{
            "100":np.array([[-1,0,0],[0,1,0],[0,0,1]]),
            "010":np.array([[1,0,0],[0,-1,0],[0,0,1]]),
            "001":np.array([[1,0,0],[0,1,0],[0,0,-1]]),

            "110":np.array([[0,-1,0],[-1,0,0],[0,0,1]]),            
            "011":np.array([[1,0,0],[0,0,-1],[0,-1,0]]),
            "101":np.array([[0,0,-1],[0,1,0],[-1,0,0]]),
            
            "-101":np.array([[0,0,1],[0,1,0],[1,0,0]]),
            "-110":np.array([[0,1,0],[1,0,0],[0,0,1]]),
            "0-11":np.array([[1,0,0],[0,0,1],[0,1,0]])
        },
        "2":{
            "100":np.array([[1,0,0],[0,-1,0],[0,0,-1]]),
            "010":np.array([[-1,0,0],[0,1,0],[0,0,-1]]),
            "001":np.array([[-1,0,0],[0,-1,0],[0,0,1]]),

            "110":np.array([[0,1,0],[1,0,0],[0,0,-1]]),
            "101":np.array([[1,0,0],[0,-1,0],[0,0,1]]),
            "011":np.array([[-1,0,0],[0,0,1],[0,1,0]]),

            "-110":np.array([[0,-1,0],[-1,0,0],[0,0,-1]]),
            "-101":np.array([[0,0,-1],[0,-1,0],[-1,0,0]]),
            "0-11":np.array([[-1,0,0],[0,0,-1],[0,-1,0]])
        },
        "3":{
            "111":np.array([[0,0,1],[1,0,0],[0,1,0]]),
            "-111":np.array([[0,-1,0],[0,0,1],[-1,0,0]]),
            "1-11":np.array([[0,-1,0],[0,0,-1],[1,0,0]]),
            "11-1":np.array([[0,1,0],[0,0,-1],[-1,0,0]])
        },
        "-3":{
            "111":np.array([[0,0,-1],[-1,0,0],[0,-1,0]]),
            "-111":np.array([[0,1,0],[0,0,-1],[1,0,0]]),
            "1-11":np.array([[0,1,0],[0,0,1],[-1,0,0]]),
            "11-1":np.array([[0,-1,0],[0,0,1],[1,0,0]])        
        },
        "4":{
            "100":np.array([[1,0,0],[0,0,-1],[0,1,0]]),
            "010":np.array([[0,0,1],[0,1,0],[-1,0,0]]),
            "001":np.array([[0,-1,0],[1,0,0],[0,0,1]])
        },
        "-4":{
            "100":np.array([[-1,0,0],[0,0,1],[0,-1,0]]),
            "010":np.array([[0,0,-1],[0,-1,0],[1,0,0]]),
            "001":np.array([[0,1,0],[-1,0,0],[0,0,-1]])
        }
    }

def generateSymmetryBaseHEX(): # do sprawdzenia
    return {
        "c":{
            "0000": np.array([[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,-1]])
        },
        "m":{
            "10-10": np.array([[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,0,0,1]]),
            "1-210": np.array([[0,0,-1,0],[0,-1,0,0],[-1,0,0,0],[0,0,0,1]]),
            "01-10": np.array([[1,0,0,0],[0,0,1,0],[0,1,0,0],[0,0,0,1]]),
            "-2110": np.array([[-1,0,0,0],[0,0,-1,0],[0,-1,0,0],[0,0,0,1]]),
            "-1100": np.array([[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]]),   
            "11-20": np.array([[0,-1,0,0],[-1,0,0,0],[0,0,-1,0],[0,0,0,1]]),
            "0001":  np.array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,-1]])  
        },
        "2":{
            "10-10": np.array([[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,0,0,1]])    *-1,
            "1-210": np.array([[0,0,-1,0],[0,-1,0,0],[-1,0,0,0],[0,0,0,1]]) *-1,
            "01-10": np.array([[1,0,0,0],[0,0,1,0],[0,1,0,0],[0,0,0,1]])    *-1,
            "-2110": np.array([[-1,0,0,0],[0,0,-1,0],[0,-1,0,0],[0,0,0,1]]) *-1,
            "-1100": np.array([[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]])    *-1,   
            "11-20": np.array([[0,-1,0,0],[-1,0,0,0],[0,0,-1,0],[0,0,0,1]]) *-1,
            "0001":  np.array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,-1]])   *-1        
        },
        "3":{
            "0001": np.array([[0,1,0,0],[0,0,1,0],[1,0,0,0],[0,0,0,1]])
        },
        "-3":{
            "0001": np.array([[0,1,0,0],[0,0,1,0],[1,0,0,0],[0,0,0,1]]) *-1
        },
        "6":{
            "0001": np.array([[0,-1,0,0],[0,0,-1,0],[-1,0,0,0],[0,0,0,1]])
        },
        "-6":{
            "0001": np.array([[0,-1,0,0],[0,0,-1,0],[-1,0,0,0],[0,0,0,1]]) *-1
        }
    }